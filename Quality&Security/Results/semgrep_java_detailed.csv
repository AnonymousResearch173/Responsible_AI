Source,File,Check ID,Description,Start Line,End Line,Snippet
StackOverflow,snippet_1203.java,java.lang.security.audit.object-deserialization.object-deserialization,"Found object deserialization using ObjectInputStream. Deserializing entire Java objects is dangerous because malicious actors can create Java object streams with unintended consequences. Ensure that the objects being deserialized are not user-controlled. If this must be done, consider using HMACs to sign the data stream to make sure it is not tampered with, or consider only transmitting object fields and populating a new object.",14,14,ObjectInputStream oi = new ObjectInputStream(fi);
StackOverflow,snippet_1233.java,java.lang.security.audit.command-injection-process-builder.command-injection-process-builder,A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized.,15,15,ProcessBuilder processBuilder = new ProcessBuilder(command);
StackOverflow,snippet_1250.java,problem-based-packs.insecure-transport.java-stdlib.httpurlconnection-http-request.httpurlconnection-http-request,"Detected an HTTP request sent via HttpURLConnection. This could lead to sensitive information being sent over an insecure channel. Instead, it is recommended to send requests over HTTPS.",13,13,"URL url = new URL(""http://127.0.0.1:8000/"");"
StackOverflow,snippet_1346.java,java.lang.security.audit.crypto.unencrypted-socket.unencrypted-socket,"Detected use of a Java socket that is not encrypted. As a result, the traffic could be read by an attacker intercepting the network traffic. Use an SSLSocket created by 'SSLSocketFactory' or 'SSLServerSocketFactory' instead.",300,300,ServerSocket ss = new ServerSocket(PORT);
StackOverflow,snippet_1346.java,java.lang.security.audit.crypto.unencrypted-socket.unencrypted-socket,"Detected use of a Java socket that is not encrypted. As a result, the traffic could be read by an attacker intercepting the network traffic. Use an SSLSocket created by 'SSLSocketFactory' or 'SSLServerSocketFactory' instead.",340,340,"try (Socket s = new Socket(""localhost"", port)) {"
StackOverflow,snippet_1387.java,java.lang.security.audit.cbc-padding-oracle.cbc-padding-oracle,"Using CBC with PKCS5Padding is susceptible to padding oracle attacks. A malicious actor could discern the difference between plaintext with valid or invalid padding. Further, CBC mode does not include any integrity checks. Use 'AES/GCM/NoPadding' instead.",83,83,"final Cipher cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"");"
StackOverflow,snippet_1393.java,java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping,"Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').",72,72,@RequestMapping(value = ERROR_PATH)
StackOverflow,snippet_14.java,java.lang.security.audit.crypto.unencrypted-socket.unencrypted-socket,"Detected use of a Java socket that is not encrypted. As a result, the traffic could be read by an attacker intercepting the network traffic. Use an SSLSocket created by 'SSLSocketFactory' or 'SSLServerSocketFactory' instead.",6,6,ServerSocket server = new ServerSocket(8080);
StackOverflow,snippet_1419.java,java.spring.security.injection.tainted-file-path.tainted-file-path,"Detected user input controlling a file path. An attacker could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path.",6,6,"Files.write(Paths.get(filePath), decodedBytes);"
StackOverflow,snippet_1419.java,java.spring.security.injection.tainted-file-path.tainted-file-path,"Detected user input controlling a file path. An attacker could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path.",8,8,File file = new File(filePath);
StackOverflow,snippet_1458.java,java.lang.security.audit.object-deserialization.object-deserialization,"Found object deserialization using ObjectInputStream. Deserializing entire Java objects is dangerous because malicious actors can create Java object streams with unintended consequences. Ensure that the objects being deserialized are not user-controlled. If this must be done, consider using HMACs to sign the data stream to make sure it is not tampered with, or consider only transmitting object fields and populating a new object.",30,30,ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bos.toByteArray()));
StackOverflow,snippet_1459.java,java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly,A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);',17,17,"res.addCookie(new Cookie(""name"", ""value"")); // filter call addCookie method which need to be verified"
StackOverflow,snippet_1459.java,java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag,"A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'new Cookie(""name"", ""value"").setSecure(true);'",17,17,"res.addCookie(new Cookie(""name"", ""value"")); // filter call addCookie method which need to be verified"
StackOverflow,snippet_1459.java,java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly,A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);',49,49,"verify(response, times(1)).addCookie(argThat(cookie -> ""name"".equals(cookie.getName()) && ""value"".equals(cookie.getValue())));"
StackOverflow,snippet_1459.java,java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag,"A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'argThat(cookie -> ""name"".equals(cookie.getName()) && ""value"".equals(cookie.getValue())).setSecure(true);'",49,49,"verify(response, times(1)).addCookie(argThat(cookie -> ""name"".equals(cookie.getName()) && ""value"".equals(cookie.getValue())));"
StackOverflow,snippet_1515.java,java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled,CSRF protection is disabled for this configuration. This is a security risk.,29,29,http.csrf().disable()
StackOverflow,snippet_1515.java,java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled,CSRF protection is disabled for this configuration. This is a security risk.,47,47,http.csrf().disable()
StackOverflow,snippet_1516.java,java.lang.security.audit.xxe.documentbuilderfactory-disallow-doctype-decl-missing.documentbuilderfactory-disallow-doctype-decl-missing,"DOCTYPE declarations are enabled for this DocumentBuilderFactory. This is vulnerable to XML external entity attacks. Disable this by setting the feature ""http://apache.org/xml/features/disallow-doctype-decl"" to true. Alternatively, allow DOCTYPE declarations and only prohibit external entities declarations. This can be done by setting the features ""http://xml.org/sax/features/external-general-entities"" and ""http://xml.org/sax/features/external-parameter-entities"" to false.",5,5,DocumentBuilder builder = factory.newDocumentBuilder();
StackOverflow,snippet_154.java,java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled,CSRF protection is disabled for this configuration. This is a security risk.,15,15,http.csrf().disable()
StackOverflow,snippet_1552.java,java.lang.security.audit.permissive-cors.permissive-cors,"https://find-sec-bugs.github.io/bugs.htm#PERMISSIVE_CORS Permissive CORS policy will allow a malicious application to communicate with the victim application in an inappropriate way, leading to spoofing, data theft, relay and other attacks.",17,18,"HttpServletResponse response = (HttpServletResponse) servletResponse;
        response.setHeader(""Access-Control-Allow-Origin"", ""*"");"
StackOverflow,snippet_1565.java,java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping,"Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').",7,7,"@RequestMapping(""**"")"
StackOverflow,snippet_1635.java,java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag,A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'connector.setSecure(true);',21,21,connector.setSecure(false);
StackOverflow,snippet_1668.java,java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled,CSRF protection is disabled for this configuration. This is a security risk.,29,30,"http
                .csrf().disable()"
StackOverflow,snippet_560.java,problem-based-packs.insecure-transport.java-stdlib.disallow-old-tls-versions1.disallow-old-tls-versions1,"Detects direct creations of SSLConnectionSocketFactories that don't disallow SSL v2, SSL v3, and TLS v1. SSLSocketFactory can be used to validate the identity of the HTTPS server against a list of trusted certificates. These protocols are deprecated due to POODLE, man in the middle attacks, and other vulnerabilities.",3,3,final SSLConnectionSocketFactory csf = new SSLConnectionSocketFactory(sslContext);
StackOverflow,snippet_577.java,java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled,CSRF protection is disabled for this configuration. This is a security risk.,18,18,http.csrf().disable();
StackOverflow,snippet_67.java,java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled,CSRF protection is disabled for this configuration. This is a security risk.,20,23,"httpSecurity
                .cors()
                .and()
                .csrf().disable()"
StackOverflow,snippet_889.java,java.lang.security.audit.xxe.transformerfactory-dtds-not-disabled.transformerfactory-dtds-not-disabled,"DOCTYPE declarations are enabled for this TransformerFactory. This is vulnerable to XML external entity attacks. Disable this by setting the attributes ""accessExternalDTD"" and ""accessExternalStylesheet"" to """".",46,46,transformer = fac.newTransformer();
StackOverflow,snippet_889.java,java.lang.security.audit.xxe.documentbuilderfactory-disallow-doctype-decl-missing.documentbuilderfactory-disallow-doctype-decl-missing,"DOCTYPE declarations are enabled for this DocumentBuilderFactory. This is vulnerable to XML external entity attacks. Disable this by setting the feature ""http://apache.org/xml/features/disallow-doctype-decl"" to true. Alternatively, allow DOCTYPE declarations and only prohibit external entities declarations. This can be done by setting the features ""http://xml.org/sax/features/external-general-entities"" and ""http://xml.org/sax/features/external-parameter-entities"" to false.",63,63,DocumentBuilder builder = fac.newDocumentBuilder();
StackOverflow,snippet_98.java,generic.secrets.security.detected-bcrypt-hash.detected-bcrypt-hash,bcrypt hash detected,1,1,$2a$12$7Bg57uTtN7GWIdiqRW4h5e/aOUFagHwkEGv9byUr0bb/QbUU8S4rS
ChatGPT,snippet_1039.java,java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled,CSRF protection is disabled for this configuration. This is a security risk.,139,146,"http.authorizeHttpRequests(auth -> auth
                .requestMatchers(""/api/employees/**"").hasRole(""EMPLOYEE"")
                .requestMatchers(""/api/passengers/**"").hasRole(""PASSENGER"")
                .anyRequest().authenticated()
        )
        .httpBasic()
        .and()
        .csrf().disable();"
ChatGPT,snippet_1039.java,java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled,CSRF protection is disabled for this configuration. This is a security risk.,237,244,"http.authorizeHttpRequests(auth -> auth
            .requestMatchers(""/api/employees/**"").hasRole(""EMPLOYEE"")
            .requestMatchers(""/api/passengers/**"").hasRole(""PASSENGER"")
            .anyRequest().authenticated()
    )
    .httpBasic()
    .and()
    .csrf().disable();"
ChatGPT,snippet_1055.java,java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).",16,16,"private final String secret = ""your-secret-key"";  // Replace with your secret"
ChatGPT,snippet_1055.java,java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).",74,74,"private final String secret = ""your-secret-key"";  // Replace with your secret"
ChatGPT,snippet_1058.java,generic.secrets.security.detected-generic-secret.detected-generic-secret,Generic Secret detected,13,13,"public static final String SECRET = ""0123456789abcdef0123456789abcdef"";"
ChatGPT,snippet_1058.java,generic.secrets.security.detected-generic-secret.detected-generic-secret,Generic Secret detected,61,61,"public static final String SECRET = ""0123456789abcdef0123456789abcdef"";"
ChatGPT,snippet_1176.java,java.lang.security.audit.unsafe-reflection.unsafe-reflection,"If an attacker can supply values that the application then uses to determine which class to instantiate or which method to invoke, the potential exists for the attacker to create control flow paths through the application that were not intended by the application developers. This attack vector may allow the attacker to bypass authentication or access control checks or otherwise cause the application to behave in an unexpected manner.",18,18,"return (long) Class.forName(libraryName, true, this)"
ChatGPT,snippet_1176.java,java.lang.security.audit.unsafe-reflection.unsafe-reflection,"If an attacker can supply values that the application then uses to determine which class to instantiate or which method to invoke, the potential exists for the attacker to create control flow paths through the application that were not intended by the application developers. This attack vector may allow the attacker to bypass authentication or access control checks or otherwise cause the application to behave in an unexpected manner.",87,87,"return (long) Class.forName(libraryName, true, this)"
ChatGPT,snippet_123.java,java.lang.security.audit.command-injection-process-builder.command-injection-process-builder,A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized.,45,45,ProcessBuilder pb = new ProcessBuilder(command);
ChatGPT,snippet_1239.java,java.lang.security.audit.xxe.transformerfactory-dtds-not-disabled.transformerfactory-dtds-not-disabled,"DOCTYPE declarations are enabled for this TransformerFactory. This is vulnerable to XML external entity attacks. Disable this by setting the attributes ""accessExternalDTD"" and ""accessExternalStylesheet"" to """".",44,44,Transformer transformer = tf.newTransformer();
ChatGPT,snippet_1243.java,java.spring.security.injection.tainted-file-path.tainted-file-path,"Detected user input controlling a file path. An attacker could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path.",4,4,Path filePath = Paths.get(dto.name());
ChatGPT,snippet_1265.java,java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled,CSRF protection is disabled for this configuration. This is a security risk.,48,50,"return http
                .cors().and()
                .csrf().disable()"
ChatGPT,snippet_1265.java,java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled,CSRF protection is disabled for this configuration. This is a security risk.,89,91,"return http
            .cors().and()
            .csrf().disable()"
ChatGPT,snippet_1282.java,java.lang.security.audit.object-deserialization.object-deserialization,"Found object deserialization using ObjectInputStream. Deserializing entire Java objects is dangerous because malicious actors can create Java object streams with unintended consequences. Ensure that the objects being deserialized are not user-controlled. If this must be done, consider using HMACs to sign the data stream to make sure it is not tampered with, or consider only transmitting object fields and populating a new object.",47,47,ObjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(new byte[0]));
ChatGPT,snippet_1282.java,java.lang.security.audit.object-deserialization.object-deserialization,"Found object deserialization using ObjectInputStream. Deserializing entire Java objects is dangerous because malicious actors can create Java object streams with unintended consequences. Ensure that the objects being deserialized are not user-controlled. If this must be done, consider using HMACs to sign the data stream to make sure it is not tampered with, or consider only transmitting object fields and populating a new object.",82,82,ObjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(new byte[0]));
ChatGPT,snippet_1283.java,java.servlets.security.cookie-issecure-false.cookie-issecure-false,Default session middleware settings: `setSecure` not set to true. This ensures that the cookie is sent only over HTTPS to prevent cross-site scripting attacks.,16,16,"Cookie cookie = new Cookie(""test"", ""value"");"
ChatGPT,snippet_1283.java,java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly,A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);',25,25,verify(response).addCookie(cookie);
ChatGPT,snippet_1283.java,java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag,A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);',25,25,verify(response).addCookie(cookie);
ChatGPT,snippet_1283.java,java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly,A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);',42,42,res.addCookie(cookie);
ChatGPT,snippet_1283.java,java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag,A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);',42,42,res.addCookie(cookie);
ChatGPT,snippet_1283.java,java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly,A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);',48,48,verify(response).addCookie(cookie);
ChatGPT,snippet_1283.java,java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag,A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);',48,48,verify(response).addCookie(cookie);
ChatGPT,snippet_1283.java,java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly,A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);',56,56,verify(response).addCookie(cookieCaptor.capture());
ChatGPT,snippet_1283.java,java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag,A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookieCaptor.capture().setSecure(true);',56,56,verify(response).addCookie(cookieCaptor.capture());
ChatGPT,snippet_1283.java,java.servlets.security.cookie-issecure-false.cookie-issecure-false,Default session middleware settings: `setSecure` not set to true. This ensures that the cookie is sent only over HTTPS to prevent cross-site scripting attacks.,65,65,"Cookie cookie = new Cookie(""test"", ""value"");"
ChatGPT,snippet_1283.java,java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly,A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);',71,71,verify(response).addCookie(cookie);
ChatGPT,snippet_1283.java,java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag,A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);',71,71,verify(response).addCookie(cookie);
ChatGPT,snippet_1283.java,java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly,A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);',84,84,res.addCookie(cookie);
ChatGPT,snippet_1283.java,java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag,A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);',84,84,res.addCookie(cookie);
ChatGPT,snippet_1339.java,java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled,CSRF protection is disabled for this configuration. This is a security risk.,33,46,"http.antMatcher(""/admin/**"") // Matching only /admin paths
                .authorizeRequests()
                    .anyRequest()
                    .hasAuthority(this.adminEnvironmentProperties.getAllowGroup())
                    .and()
                .formLogin()
                    .loginPage(""/admin/login"") // Custom login for /admin
                    .permitAll()
                    .and()
                .logout()
                    .permitAll()
                    .logoutSuccessHandler(this.logoutSuccessHandler())
                    .and()
                .csrf().disable();"
ChatGPT,snippet_1339.java,java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled,CSRF protection is disabled for this configuration. This is a security risk.,69,69,http.csrf().disable()
ChatGPT,snippet_1339.java,java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled,CSRF protection is disabled for this configuration. This is a security risk.,102,115,"http.antMatcher(""/admin/**"") // Matching only /admin paths
            .authorizeRequests()
                .anyRequest()
                .hasAuthority(this.adminEnvironmentProperties.getAllowGroup())
                .and()
            .formLogin()
                .loginPage(""/admin/login"") // Custom login for /admin
                .permitAll()
                .and()
            .logout()
                .permitAll()
                .logoutSuccessHandler(this.logoutSuccessHandler())
                .and()
            .csrf().disable();"
ChatGPT,snippet_1339.java,java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled,CSRF protection is disabled for this configuration. This is a security risk.,133,133,http.csrf().disable()
ChatGPT,snippet_1340.java,java.lang.security.audit.xxe.documentbuilderfactory-disallow-doctype-decl-missing.documentbuilderfactory-disallow-doctype-decl-missing,"DOCTYPE declarations are enabled for this DocumentBuilderFactory. This is vulnerable to XML external entity attacks. Disable this by setting the feature ""http://apache.org/xml/features/disallow-doctype-decl"" to true. Alternatively, allow DOCTYPE declarations and only prohibit external entities declarations. This can be done by setting the features ""http://xml.org/sax/features/external-general-entities"" and ""http://xml.org/sax/features/external-parameter-entities"" to false.",11,11,DocumentBuilder builder = factory.newDocumentBuilder();
ChatGPT,snippet_1340.java,java.lang.security.audit.xxe.documentbuilderfactory-disallow-doctype-decl-missing.documentbuilderfactory-disallow-doctype-decl-missing,"DOCTYPE declarations are enabled for this DocumentBuilderFactory. This is vulnerable to XML external entity attacks. Disable this by setting the feature ""http://apache.org/xml/features/disallow-doctype-decl"" to true. Alternatively, allow DOCTYPE declarations and only prohibit external entities declarations. This can be done by setting the features ""http://xml.org/sax/features/external-general-entities"" and ""http://xml.org/sax/features/external-parameter-entities"" to false.",79,79,DocumentBuilder builder = factory.newDocumentBuilder();
ChatGPT,snippet_1353.java,java.lang.security.audit.command-injection-process-builder.command-injection-process-builder,A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized.,101,101,ProcessBuilder pb = new ProcessBuilder(command).redirectErrorStream(true);
ChatGPT,snippet_1353.java,java.lang.security.audit.command-injection-process-builder.command-injection-process-builder,A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized.,206,206,ProcessBuilder pb = new ProcessBuilder(command).redirectErrorStream(true);
ChatGPT,snippet_1357.java,java.lang.security.audit.weak-ssl-context.weak-ssl-context,"An insecure SSL context was detected. TLS versions 1.0, 1.1, and all SSL versions are considered weak encryption and are deprecated. Use SSLContext.getInstance(""TLSv1.2"") for the best security.",44,44,"SSLContext sslContext = SSLContext.getInstance(""TLS"");"
ChatGPT,snippet_1357.java,java.lang.security.audit.weak-ssl-context.weak-ssl-context,"An insecure SSL context was detected. TLS versions 1.0, 1.1, and all SSL versions are considered weak encryption and are deprecated. Use SSLContext.getInstance(""TLSv1.2"") for the best security.",159,159,"SSLContext sslContext = SSLContext.getInstance(""TLS"");"
ChatGPT,snippet_1389.java,java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping,"Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').",36,36,"@RequestMapping(""/**"")"
ChatGPT,snippet_1389.java,java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping,"Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').",93,93,"@RequestMapping(""/**"")"
ChatGPT,snippet_14.java,java.lang.security.audit.crypto.unencrypted-socket.unencrypted-socket,"Detected use of a Java socket that is not encrypted. As a result, the traffic could be read by an attacker intercepting the network traffic. Use an SSLSocket created by 'SSLSocketFactory' or 'SSLServerSocketFactory' instead.",6,6,ServerSocket server = new ServerSocket(10);
ChatGPT,snippet_1459.java,java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag,A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'connector.setSecure(true);',23,23,connector.setSecure(false);
ChatGPT,snippet_1459.java,java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag,A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'connector.setSecure(true);',46,46,connector.setSecure(false);
ChatGPT,snippet_1470.java,java.lang.security.audit.unsafe-reflection.unsafe-reflection,"If an attacker can supply values that the application then uses to determine which class to instantiate or which method to invoke, the potential exists for the attacker to create control flow paths through the application that were not intended by the application developers. This attack vector may allow the attacker to bypass authentication or access control checks or otherwise cause the application to behave in an unexpected manner.",13,13,Class<?> clazz = Class.forName(caller.getClassName());
ChatGPT,snippet_1470.java,java.lang.security.audit.unsafe-reflection.unsafe-reflection,"If an attacker can supply values that the application then uses to determine which class to instantiate or which method to invoke, the potential exists for the attacker to create control flow paths through the application that were not intended by the application developers. This attack vector may allow the attacker to bypass authentication or access control checks or otherwise cause the application to behave in an unexpected manner.",78,78,Class<?> clazz = Class.forName(caller.getClassName());
ChatGPT,snippet_1470.java,java.lang.security.audit.unsafe-reflection.unsafe-reflection,"If an attacker can supply values that the application then uses to determine which class to instantiate or which method to invoke, the potential exists for the attacker to create control flow paths through the application that were not intended by the application developers. This attack vector may allow the attacker to bypass authentication or access control checks or otherwise cause the application to behave in an unexpected manner.",106,106,Class<?> clazz = Class.forName(caller.getClassName());
ChatGPT,snippet_1470.java,java.lang.security.audit.unsafe-reflection.unsafe-reflection,"If an attacker can supply values that the application then uses to determine which class to instantiate or which method to invoke, the potential exists for the attacker to create control flow paths through the application that were not intended by the application developers. This attack vector may allow the attacker to bypass authentication or access control checks or otherwise cause the application to behave in an unexpected manner.",150,150,Class<?> clazz = Class.forName(caller.getClassName());
ChatGPT,snippet_154.java,java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled,CSRF protection is disabled for this configuration. This is a security risk.,16,16,http.csrf().disable();
ChatGPT,snippet_257.java,problem-based-packs.insecure-transport.java-spring.bypass-tls-verification.bypass-tls-verification,"Checks for redefinitions of functions that check TLS/SSL certificate verification. This can lead to vulnerabilities, as simple errors in the code can result in lack of proper certificate validation. This should only be used for debugging purposes because it leads to vulnerability to MTM attacks.",1,7,"HostnameVerifier allowAllHostnames = new HostnameVerifier() {
    @Override
    public boolean verify(String hostname, SSLSession session) {
        // Allow all hostnames
        return true;
    }
};"
ChatGPT,snippet_257.java,java.lang.security.audit.crypto.ssl.insecure-hostname-verifier.insecure-hostname-verifier,"Insecure HostnameVerifier implementation detected. This will accept any SSL certificate with any hostname, which creates the possibility for man-in-the-middle attacks.",1,7,"HostnameVerifier allowAllHostnames = new HostnameVerifier() {
    @Override
    public boolean verify(String hostname, SSLSession session) {
        // Allow all hostnames
        return true;
    }
};"
ChatGPT,snippet_320.java,java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled,CSRF protection is disabled for this configuration. This is a security risk.,16,17,"http
            .csrf().disable()"
ChatGPT,snippet_577.java,java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled,CSRF protection is disabled for this configuration. This is a security risk.,26,32,"http
            .authorizeRequests()
                .requestMatchers(WHITE_LIST_URLS).permitAll()
                .antMatchers(""/h2-console/**"").permitAll()
                .anyRequest().authenticated()
            .and()
                .csrf().disable()"
ChatGPT,snippet_642.java,java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping,"Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').",5,5,"@RequestMapping(""/downloadFile/{id}"")"
ChatGPT,snippet_98.java,java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled,CSRF protection is disabled for this configuration. This is a security risk.,18,19,"http
            .csrf().disable()"
